# Bu workflow'un adı
name: Docker Image CI for Media Service

# Bu workflow ne zaman çalışacak?
on:
  # 'main' branch'ine her push yapıldığında
  push:
    branches: [ "main" ]
  # Ayrıca, GitHub arayüzünden manuel olarak da tetiklenebilir
  workflow_dispatch:

jobs:
  build_and_push:
    # İşlemin çalışacağı sanal sunucu (GitHub tarafından sağlanır)
    runs-on: ubuntu-latest

    # Bu işin, paketleri ghcr.io'ya yazma izni olduğunu belirtiyoruz
    permissions:
      contents: read
      packages: write

    steps:
      # Adım 1: Kodumuzu (repoyu) sanal sunucuya indir (checkout)
      - name: Check out the repo
        uses: actions/checkout@v4

      # Adım 2: Docker imajları için daha gelişmiş özellikler sunan buildx'i kur
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Adım 3: GitHub Container Registry'ye (ghcr.io) giriş yap
      # GITHUB_TOKEN, GitHub tarafından otomatik olarak sağlanan bir sırdır, bizim bir şey yapmamıza gerek yok
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Adım 4: Docker imajını derle ve GHCR'ye gönder (push)
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          # Derleme için kullanılacak Dockerfile'ın yolu
          context: .
          # İmajı GHCR'ye gönder
          push: true
          # İmajı etiketle. Örnek: ghcr.io/sentiric/sentiric-media-service:latest
          tags: ghcr.io/${{ github.repository }}:latest