# File: docker-compose.test.yml (GÜNCELLENMİŞ)
version: '3.8'

networks:
  sentiric-test-net:
    name: "${NETWORK_NAME:-sentiric-test-net}"

volumes:
  minio_test_data:
  rabbitmq_test_data:

services:

  rabbitmq:
    build: { context: ../sentiric-rabbitmq }
    env_file: [".env.test"]
    ports: ["15672:15672", "5672:5672"]
    volumes: [rabbitmq_test_data:/var/lib/rabbitmq/]
    networks:
      - sentiric-test-net
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: quay.io/minio/minio
    # DEĞİŞİKLİK: Artık .env.test kullanıyor
    env_file: [".env.test"]
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_test_data:/data
    networks:
      - sentiric-test-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  media-service:
    build:
      context: .
      dockerfile: Dockerfile
    # DEĞİŞİKLİK: Artık .env.test kullanıyor
    env_file: [".env.test"]
    volumes:
      - "${CONFIG_REPO_PATH}/tls/certs:/etc/sentiric/tls:ro"
      - "../sentiric-assets:/app/assets:ro"
    ports: 
      - "${MEDIA_SERVICE_PORT}:${MEDIA_SERVICE_PORT}"
      - "${MEDIA_SERVICE_METRICS_PORT}:${MEDIA_SERVICE_METRICS_PORT}"      
      - "${MEDIA_SERVICE_GRPC_PORT}:${MEDIA_SERVICE_GRPC_PORT}"
      - "${RTP_SERVICE_PORT_MIN}-${RTP_SERVICE_PORT_MAX}:${RTP_SERVICE_PORT_MIN}-${RTP_SERVICE_PORT_MAX}/udp"      
    networks:
      - sentiric-test-net
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50052"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    depends_on: {
      minio: { condition: service_healthy },
      rabbitmq: { condition: service_healthy },
    }             

  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    # DEĞİŞİKLİK: Artık .env.test kullanıyor
    env_file: [".env.test"]
    # YENİ: Test runner'a hangi .env dosyasını kullanacağını söylüyoruz
    environment:
      - ENV_FILE=.env.test
    networks:
      - sentiric-test-net
    volumes:
      - "${CONFIG_REPO_PATH}/tls/certs:/etc/sentiric/tls:ro"
    depends_on:
      media-service:
        condition: service_healthy