# docker-compose.test.yml
# Service Test ortamı

networks:
  sentiric-net:
    name: "${NETWORK_NAME:-sentiric-net}"
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}
  
volumes:
  # [infra]: Temel Altyapı (Infrastructure Layer)
  # --------------------------------------------------
  rabbitmq_data:
  minio_data:

services:
  # [infra]: Temel Altyapı (Infrastructure Layer)
  # --------------------------------------------------
  minio:
    image: quay.io/minio/minio
    env_file: [".env.example"]
    volumes:
      - minio_data:/data   
    ports: 
      - "9000:${MINIO_API_PORT:-9000}"
      - "9001:${MINIO_CONSOLE_PORT:-9001}"      
    networks:
      sentiric-net:
        ipv4_address: ${MINIO_IPV4_ADDRESS}          
    command: server /data --console-address ":9001"
    restart: always  
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  rabbitmq:
    image: ghcr.io/sentiric/sentiric-rabbitmq:${TAG:-latest}
    env_file: [".env.example"]
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq/    
    ports: 
      - "5672:${RABBITMQ_PORT:-5672}"
      - "15672:${RABBITMQ_UI_PORT:-15672}"
    networks:
      sentiric-net:
        ipv4_address: ${RABBITMQ_IPV4_ADDRESS}
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3    

  # [capability-telephony]: Yetenek Servisleri (Capability Layer)
  # --------------------------------------------------  
  media-service:
    build: { context: ../sentiric-media-service }
    env_file: [".env.example"]
    volumes: 
      - "${CONFIG_REPO_PATH}:/sentiric-config:ro"
      - "${CERTIFICATES_REPO_PATH}:/sentiric-certificates:ro"
      - "${ASSETS_REPO_PATH}:/sentiric-assets:ro"
    ports: 
      - "13030:${MEDIA_SERVICE_HTTP_PORT:-13030}"
      - "13031:${MEDIA_SERVICE_GRPC_PORT:-13031}"
      - "13032:${MEDIA_SERVICE_METRICS_PORT:-13032}"   
      - "${RTP_SERVICE_PORT_MIN:-10000}-${RTP_SERVICE_PORT_MAX:-10100}:${RTP_SERVICE_PORT_MIN:-10000}-${RTP_SERVICE_PORT_MAX:-10100}/udp"
    networks:
      sentiric-net:
        ipv4_address: ${MEDIA_SERVICE_IPV4_ADDRESS}    
    restart: always
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "13031"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s    
    depends_on:
      minio: { condition: service_healthy }
      rabbitmq: { condition: service_healthy }

  media-service-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    env_file: [".env.example"]
    volumes: 
      - "${CERTIFICATES_REPO_PATH}:/sentiric-certificates:ro"
      - "${ASSETS_REPO_PATH}:/sentiric-assets:ro"    
    networks:
      sentiric-net:
        ipv4_address: 10.88.30.5
    depends_on: {
      minio: { condition: service_healthy },
      rabbitmq: { condition: service_healthy },
      media-service: { condition: service_healthy },
    } 