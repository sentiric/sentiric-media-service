# docker-compose.test.yml (SABİT IP ADRESLERİ İLE)

networks:
  sentiric-net:
    name: "${NETWORK_NAME:-sentiric-net}"
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}

volumes:
  rabbitmq_data:
  minio_data:

services:
  rabbitmq:
    build: { context: ../sentiric-rabbitmq }
    env_file: ["${ENV_FILE_PATH}"]
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"      
      - "${RABBITMQ_UI_PORT:-15672}:15672"   
    volumes: [rabbitmq_data:/var/lib/rabbitmq/]
    networks:
      sentiric-net:
        ipv4_address: ${RABBITMQ_IPV4_ADDRESS}
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: quay.io/minio/minio
    env_file: ["${ENV_FILE_PATH}"]
    command: server /data --console-address ":9001"
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    networks:
      sentiric-net:
        ipv4_address: ${MINIO_IPV4_ADDRESS}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: always

  media-service:
    build: { context: ../sentiric-media-service }
    env_file: ["${ENV_FILE_PATH}"]
    volumes:
      - "../sentiric-media-record:${MEDIA_SERVICE_RECORD_BASE_PATH}:rw"
      - "../sentiric-assets:/app/assets:ro"
      - "${CONFIG_REPO_PATH}/tls/certs:/etc/sentiric/tls:ro"
    ports:
      - "${MEDIA_SERVICE_PORT:-5002}:5002"
      #- "${MEDIA_SERVICE_METRICS_PORT:-9091}:9091"      
      - "${MEDIA_SERVICE_GRPC_PORT:-50052}:50052"
      - "${RTP_SERVICE_PORT_MIN:-10000}-${RTP_SERVICE_PORT_MAX:-10100}:${RTP_SERVICE_PORT_MIN:-10000}-${RTP_SERVICE_PORT_MAX:-10100}/udp"
    networks:
      sentiric-net:
        ipv4_address: ${MEDIA_SERVICE_IPV4_ADDRESS}
    restart: always
    depends_on: {
      minio: { condition: service_healthy },
      rabbitmq: { condition: service_healthy },
    } 
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50052"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s    

  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    env_file: ["${ENV_FILE_PATH}"]
    networks:
      sentiric-net:
        ipv4_address: ${TEST_RUNNER_IPV4_ADDRESS}
    volumes:
      - "${CONFIG_REPO_PATH}/tls/certs:/etc/sentiric/tls:ro"
    depends_on: {
      minio: { condition: service_healthy },
      rabbitmq: { condition: service_healthy },
      media-service: { condition: service_healthy },
    } 