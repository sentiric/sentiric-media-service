# File: Dockerfile.test

# --- STAGE 1: Builder ---
# Bu aşama, tüm test binary'lerini derler.
FROM rust:1.88-slim-bookworm AS builder

# Gerekli tüm sistem kütüphanelerini kur.
RUN apt-get update && \
    apt-get install -y \
    protobuf-compiler \
    git \
    curl \
    libssl-dev \
    pkg-config \
    && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# ---- NİHAİ DÜZELTME ----
# Önce projenin tamamını kopyala. Bu, `src/main.rs` ve `src/lib.rs`
# dosyalarının `cargo fetch` çalışmadan önce yerinde olmasını sağlar.
COPY . .

# Şimdi `cargo fetch` projenin yapısını doğru bir şekilde anlayabilir
# ve git bağımlılıkları dahil tüm bağımlılıkları indirebilir.
RUN cargo fetch
# -------------------------

# Artık tüm bağımlılıklar indirildiğine göre, derlemeyi yap.
# Bu adım, sadece kaynak kod değiştiğinde tekrar çalışır.
RUN cargo build --release --examples

# --- STAGE 2: Final Test Runner Image ---
# Bu aşama, sadece testleri çalıştırmak için gerekli olanları içerir.
FROM debian:bookworm-slim

# Testleri çalıştırmak için gerekli araçları kur
RUN apt-get update && \
    apt-get install -y netcat-openbsd ca-certificates curl && \
    curl -sSL https://dl.min.io/client/mc/release/linux-amd64/mc -o /usr/local/bin/mc && \
    chmod +x /usr/local/bin/mc && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Sadece derlenmiş test binary'lerini ve test script'ini kopyala
COPY --from=builder /app/target/release/examples/* .
COPY run-tests.sh .
RUN chmod +x run-tests.sh

# Test script'ini çalıştır
ENTRYPOINT ["./run-tests.sh"]